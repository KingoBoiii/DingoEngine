name: Build examples

# Build manually
on: workflow_dispatch

env:
  SOLUTION_FILE_PATH: 'DingoEngine.sln'

permissions:
  contents: read

jobs:
  setup:
    runs-on: [Windows, self-hosted]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true
    
  build:
    runs-on: [Windows, self-hosted]
    needs: [setup]
    strategy:
      fail-fast: false
      matrix:
        build-configuration: [Debug, Release, Distribution]
    steps:
    - uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64

    - name: Premake
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ./Generate-Windows.bat
    
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild ${{env.SOLUTION_FILE_PATH}} /m /p:Configuration=${{matrix.build-configuration}} -fl -flp:logfile=logs/Build-${{matrix.build-configuration}}.log

  examples-flappy-bird:
    runs-on: [Windows, self-hosted]
    needs: [build]
    steps:
      - name: Copy Assets
        run: | 
          robocopy .\examples\FlappyBird\assets .\build\bin\Distribution-windows-x86_64\FlappyBird\assets /e /z 
          if ($lastexitcode -lt 8) { exit 0 } else { exit 1 }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flappy-bird-distribution
          path: .\build\bin\Distribution-windows-x86_64\FlappyBird
